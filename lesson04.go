// ОСНОВЫ ЯЗЫКА. СЛАЙСЫ В GO
//
// Слайс(срез) представляет собой расширенную реализацию массива, позволяющего изменять длину.
// Каждый срез содержит в себе три блока информации:
// 1) Указатель на последовательность данных (на массив).
// 2) Длину (length), которая определяет количество элементов, которые сейчас содержатся в срезе.
// 3) Объем (capacity), который определяет общее количество предоставленных ячеек памяти.

// Слайс (в отличии от массива) не выделяет память при инициации,
// поэтому может инциироваться без указания размера, например []int

// Для добавления новых элементов в конец слайса реализована функция append()

package main

import (
	"fmt"
)

func main() {
	sliceDefinition()
	addElementToSlice()

	homeWork10()
}

func sliceDefinition() {
	fmt.Println("ТЕОРИЯ: СОЗДАЕМ СЛАЙСЫ")
	// Инициируем пустой слайс
	var randomSlice01 []int
	fmt.Println("Пустой слайс:", randomSlice01, "Длина(lenght)", len(randomSlice01), "Вместимость(cap):", cap(randomSlice01))

	// Инициацию слайса можно делать вместе с присвоением значения
	var daySlice = []string{"ПН", "СР", "ПТ"}
	fmt.Println("Cлайс:", daySlice, "Длина(lenght)", len(daySlice), "Вместимость(cap):", cap(daySlice))

	// Есть краткий способ создания слайса при помощи := (моржа)
	days := []string{"ПН", "ВТ", "СР", "ЧТ", "ПТ", "СБ", "ВС"}
	fmt.Println("Слайс:", days, "Длина(lenght)", len(days), "Вместимость(cap):", cap(days))

	// Также создать слайс можно при помощи функции make().
	// В таком случае можно явно указать длину и вместимость(необязательно).
	// Например make([]типданных, длина, вместимость)
	randomSlice02 := make([]int, 5, 10)
	fmt.Println("Слайс", randomSlice02, "Длина(lenght)", len(randomSlice02), "Вместимость(cap):", cap(randomSlice02))

}

func addElementToSlice() {
	fmt.Println("ТЕОРИЯ: ДОБАВЛЯЕМ ЭЛЕМЕНТЫ В СЛАЙС ПРИ ПОМОЩИ append()")
	// Инициируем пустой слайс
	slice01 := make([]int, 3) // [0 0 0]
	slice01 = []int{1, 2, 3}  // [1 2 3]

	// Для добавления новых элементов в конец слайса реализована функция append()
	slice01 = append(slice01, 4, 5, 6) // в slice01 добавляем елементы 4, 5, 6
	fmt.Println(slice01)               // [1 2 3 4 5 6]

	// Можно также переложить элементы из одного слайса в другой
	// Для этого необходимо распаковать передаваемый слайс при помощи оператора ... (распаковка)
	slice02 := []int{7, 8, 9}             // [7 8 9]
	slice01 = append(slice01, slice02...) // в slice01 добавляем все елементы slice02
	fmt.Println(slice01)

}

func homeWork10() {
	fmt.Println("ПРАКТИКА 10")
	// Задание 10:
	// 1) Из слайса сднями недели надо скопировать рабочие дни, а из исходного удалить
	// скопированные, чтобы остались только выходные.
	// 2) Объедините слайсы с рабочими и выходными днями в один.
	weekDays := []string{"ПН", "ВТ", "СР", "ЧТ", "ПТ", "СБ", "ВС"}
	fmt.Println("Исходный слайс:", weekDays, "Длина:", len(weekDays), "Вместимость:", cap(weekDays))
	workDays := make([]string, 5, 5)
	copy(workDays, weekDays)
	fmt.Println("Слайс с рабочими днями:", workDays, "Длина:", len(workDays), "Вместимость:", cap(workDays))
	weekEnd := make([]string, 0)
	weekEnd = append(weekEnd, "СБ", "ВС")
	fmt.Println("Слайс с выходными днями:", weekEnd, "Длина:", len(weekEnd), "Вместимость:", cap(weekEnd))
	resultSlice := append(workDays, weekEnd...)
	fmt.Println("Итоговый слайс:", resultSlice, "Длина:", len(resultSlice), "Вместимость:", cap(resultSlice))

}
